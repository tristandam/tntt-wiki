"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[39735],{22824:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return s},default:function(){return g},frontMatter:function(){return a},metadata:function(){return u},toc:function(){return p}});var r=n(83117),o=n(80102),i=(n(67294),n(3905)),c=["components"],a={image:"/img/integration-services/logo/integration_services.png",description:"For inquiries or questions regarding the Integration Services project, please contact Michele Nati (Head of Telecommunication and Infrastructure Development) <michele.nati@iota.org>.",keywords:["contact","inquiries","questions"]},s=void 0,u={unversionedId:"contact",id:"contact",title:"contact",description:"For inquiries or questions regarding the Integration Services project, please contact Michele Nati (Head of Telecommunication and Infrastructure Development) <michele.nati@iota.org>.",source:"@site/external/integration-services/documentation/docs/contact.md",sourceDirName:".",slug:"/contact",permalink:"/integration-services/contact",editUrl:"https://github.com/iotaledger/integration-services/edit/develop/external/integration-services/documentation/docs/contact.md",tags:[],version:"current",frontMatter:{image:"/img/integration-services/logo/integration_services.png",description:"For inquiries or questions regarding the Integration Services project, please contact Michele Nati (Head of Telecommunication and Infrastructure Development) <michele.nati@iota.org>.",keywords:["contact","inquiries","questions"]},sidebar:"docs",previous:{title:"contribute",permalink:"/integration-services/contribute"}},l={},p=[],f={toc:p};function g(e){var t=e.components,n=(0,o.Z)(e,c);return(0,i.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"contact"},"Contact"),(0,i.kt)("p",null,"For inquiries or questions regarding the Integration Services project, please contact us via ",(0,i.kt)("a",{parentName:"p",href:"mailto:integrations@iota.org"},"integrations@iota.org"),"."))}g.isMDXComponent=!0},3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return g}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),f=u(n),g=o,m=f["".concat(s,".").concat(g)]||f[g]||p[g]||i;return n?r.createElement(m,c(c({ref:t},l),{},{components:n})):r.createElement(m,c({ref:t},l))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,c=new Array(i);c[0]=f;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:o,c[1]=a;for(var u=2;u<i;u++)c[u]=n[u];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"}}]);