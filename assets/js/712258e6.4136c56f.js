"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[60929],{82931:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return r},default:function(){return h},frontMatter:function(){return o},metadata:function(){return d},toc:function(){return p}});var a=n(83117),l=n(80102),s=(n(67294),n(3905)),i=["components"],o={description:"The main features in the wallet are requesting tokens from the faucet, sending tokens or assets to addresses, creating digital assets, creating-, transferring- or destroying NFTs, managing NFT owned tokens or assets and delegating tokens or digital assets",image:"/img/tutorials/wallet_library/created_nft.png",keywords:["wallet","bash","devnet","tokens","digital assets","creating","NFT","managing","requesting"]},r=void 0,d={unversionedId:"tutorials/wallet_library",id:"tutorials/wallet_library",title:"wallet_library",description:"The main features in the wallet are requesting tokens from the faucet, sending tokens or assets to addresses, creating digital assets, creating-, transferring- or destroying NFTs, managing NFT owned tokens or assets and delegating tokens or digital assets",source:"@site/external/goshimmer/documentation/docs/tutorials/wallet_library.md",sourceDirName:"tutorials",slug:"/tutorials/wallet_library",permalink:"/goshimmer/tutorials/wallet_library",editUrl:"https://github.com/iotaledger/goshimmer/edit/develop/external/goshimmer/documentation/docs/tutorials/wallet_library.md",tags:[],version:"current",frontMatter:{description:"The main features in the wallet are requesting tokens from the faucet, sending tokens or assets to addresses, creating digital assets, creating-, transferring- or destroying NFTs, managing NFT owned tokens or assets and delegating tokens or digital assets",image:"/img/tutorials/wallet_library/created_nft.png",keywords:["wallet","bash","devnet","tokens","digital assets","creating","NFT","managing","requesting"]},sidebar:"docs",previous:{title:"obtain_tokens",permalink:"/goshimmer/tutorials/obtain_tokens"},next:{title:"dApp",permalink:"/goshimmer/tutorials/dApp"}},u={},p=[{value:"Initializing the Wallet",id:"initializing-the-wallet",level:2},{value:"Requesting Tokens",id:"requesting-tokens",level:2},{value:"Creating Digital Assets",id:"creating-digital-assets",level:2},{value:"Fetching Information of a Digital Asset",id:"fetching-information-of-a-digital-asset",level:3},{value:"Sending Tokens and Assets",id:"sending-tokens-and-assets",level:2},{value:"Simple Send",id:"simple-send",level:3},{value:"Time Locked Sending",id:"time-locked-sending",level:3},{value:"Conditional Sending",id:"conditional-sending",level:3},{value:"Creating NFTs",id:"creating-nfts",level:2},{value:"Transferring NFTs",id:"transferring-nfts",level:2},{value:"Destroying NFTs",id:"destroying-nfts",level:2},{value:"Managing NFT Owned Assets",id:"managing-nft-owned-assets",level:2},{value:"Deposit Assets Into Owned NFT",id:"deposit-assets-into-owned-nft",level:3},{value:"Withdrawing Assets From NFT",id:"withdrawing-assets-from-nft",level:3},{value:"Sweep NFT Owned Funds",id:"sweep-nft-owned-funds",level:3},{value:"Sweep NFT Owned NFTs",id:"sweep-nft-owned-nfts",level:3},{value:"Delegating Assets",id:"delegating-assets",level:2},{value:"Reclaiming Delegated Assets",id:"reclaiming-delegated-assets",level:2},{value:"Common Flags",id:"common-flags",level:2},{value:"Command Reference",id:"command-reference",level:2},{value:"balance",id:"balance",level:3},{value:"send-funds",id:"send-funds",level:3},{value:"consolidate-funds",id:"consolidate-funds",level:3},{value:"claim-conditional",id:"claim-conditional",level:3},{value:"request-funds",id:"request-funds",level:3},{value:"create-asset",id:"create-asset",level:3},{value:"delegate-funds",id:"delegate-funds",level:3},{value:"reclaim-delegated",id:"reclaim-delegated",level:3},{value:"create-nft",id:"create-nft",level:3},{value:"transfer-nft",id:"transfer-nft",level:3},{value:"destroy-nft",id:"destroy-nft",level:3},{value:"deposit-to-nft",id:"deposit-to-nft",level:3},{value:"withdraw-from-nft",id:"withdraw-from-nft",level:3},{value:"sweep-nft-owned-funds",id:"sweep-nft-owned-funds-1",level:3},{value:"sweep-nft-owned-nfts",id:"sweep-nft-owned-nfts-1",level:3},{value:"address",id:"address",level:3},{value:"init",id:"init",level:3},{value:"server-status",id:"server-status",level:3},{value:"pending-mana",id:"pending-mana",level:3},{value:"pledge-id",id:"pledge-id",level:3},{value:"help",id:"help",level:3}],c={toc:p};function h(e){var t=e.components,o=(0,l.Z)(e,i);return(0,s.kt)("wrapper",(0,a.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"command-line-wallet"},"Command Line Wallet"),(0,s.kt)("p",null,"This section describes how to use the command line wallet (cli-wallet)."),(0,s.kt)("p",null,"GoShimmer ships with a basic (golang) wallet library so that developers and testers can use it to move tokens around, create digital assets, NFTs or delegate funds."),(0,s.kt)("p",null,"The cli-wallet is built by using this wallet library to demonstrate the capabilities of the protocol."),(0,s.kt)("p",null,"The main features in the wallet are:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#requesting-tokens"},"Requesting tokens from the faucet")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#sending-tokens-and-assets"},"Sending tokens or assets to addresses")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#creating-digital-assets"},"Creating digital assets")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#creating-nfts"},"Creating"),", ",(0,s.kt)("a",{parentName:"li",href:"#transferring-nfts"},"transferring")," or ",(0,s.kt)("a",{parentName:"li",href:"#destroying-nfts"},"destroying")," Non-Fungible Tokens (NFTs)"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#managing-nft-owned-assets"},"Managing NFT owned tokens or assets"),"  "),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"#delegating-assets"},"Delegating tokens or digital assets"))),(0,s.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"The command line wallet and this tutorial are aimed at a developer audience, you should least be familiar with using a terminal to use it. "))),(0,s.kt)("h2",{id:"initializing-the-wallet"},"Initializing the Wallet"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"Download the latest cli-wallet for the system of your choice from the ",(0,s.kt)("a",{parentName:"li",href:"https://github.com/iotaledger/goshimmer/releases"},"GoShimmer GitHub Releases")," page."),(0,s.kt)("li",{parentName:"ol"},"If needed, make the downloaded binary executable.  If you are using linux you can run:",(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"chmod +x <downloaded-binary>\n")))),(0,s.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"For simplicity, we renamed the binary to ",(0,s.kt)("inlineCode",{parentName:"p"},"cli-wallet")," in this tutorial."))),(0,s.kt)("p",null,"You will need to initialize the wallet the first time you start it. This involves generating a secret seed that is used to generate addresses and sign transactions. The wallet will automatically persist the seed in ",(0,s.kt)("inlineCode",{parentName:"p"},"wallet.dat")," after the first run."),(0,s.kt)("p",null,"You can configure the wallet by creating a ",(0,s.kt)("inlineCode",{parentName:"p"},"config.json")," file in the directory of the executable:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "WebAPI": "http://127.0.0.1:8080",\n    "basicAuth": {\n      "enabled": false,\n      "username": "goshimmer",\n      "password": "goshimmer"\n    },\n    "reuse_addresses": false,\n    "faucetPowDifficulty": 25,\n    "assetRegistryNetwork": "nectar"\n}\n')),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"The ",(0,s.kt)("inlineCode",{parentName:"li"},"WebAPI")," tells the wallet which node API to communicate with. Set it to the url of a node API."),(0,s.kt)("li",{parentName:"ul"},"If the node has basic authentication enabled, you may configure your wallet with a username and password."),(0,s.kt)("li",{parentName:"ul"},"The ",(0,s.kt)("inlineCode",{parentName:"li"},"resuse_addresses")," option specifies if the wallet should treat addresses as reusable, or whether it should try to spend from any wallet address only once."),(0,s.kt)("li",{parentName:"ul"},"The ",(0,s.kt)("inlineCode",{parentName:"li"},"faucetPowDifficulty")," option defines the difficulty of the faucet request POW the wallet should do."),(0,s.kt)("li",{parentName:"ul"},"The ",(0,s.kt)("inlineCode",{parentName:"li"},"assetRegistryNetwork")," option defines which asset registry network to use for pushing/fetching asset metadata to/from the registry. By default, the wallet chooses the ",(0,s.kt)("inlineCode",{parentName:"li"},"nectar")," network.")),(0,s.kt)("p",null,"You can initialize your wallet by running the ",(0,s.kt)("inlineCode",{parentName:"p"},"init")," command:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet init\n")),(0,s.kt)("p",null,"If successful, you'll see the generated seed (encoded in base58) on your screen:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"IOTA 2.0 DevNet CLI-Wallet 0.2\nGENERATING NEW WALLET ...                                 [DONE]\n\n================================================================\n!!!            PLEASE CREATE A BACKUP OF YOUR SEED           !!!\n!!!                                                          !!!\n!!!       ExzYy6wS2k59dPh19Q9JiAf6z1jyDq1hieDEMmbUzkbE       !!!\n!!!                                                          !!!\n!!!            PLEASE CREATE A BACKUP OF YOUR SEED           !!!\n================================================================\n\nCREATING WALLET STATE FILE (wallet.dat) ...               [DONE]\n")),(0,s.kt)("h2",{id:"requesting-tokens"},"Requesting Tokens"),(0,s.kt)("p",null,"You can request testnet tokens by executing the ",(0,s.kt)("inlineCode",{parentName:"p"},"request-funds")," command:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet request-funds\n")),(0,s.kt)("p",null,"Expected output:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"IOTA 2.0 DevNet CLI-Wallet 0.2\n\nRequesting funds from faucet ... [PERFORMING POW]          (this can take a while)\nRequesting funds from faucet ... [DONE]\n")),(0,s.kt)("p",null,"Once you have executed the ",(0,s.kt)("inlineCode",{parentName:"p"},"request-funds")," command,  you can check the balance of your wallet by running the ",(0,s.kt)("inlineCode",{parentName:"p"},"balance")," command:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet balance\n")),(0,s.kt)("p",null,"Expected output:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"IOTA 2.0 DevNet CLI-Wallet 0.2\n\nAvailable Token Balances\n\nSTATUS  BALANCE                 COLOR                                           TOKEN NAME\n------  ---------------         --------------------------------------------    -------------------------\n[PEND]  1000000 I               IOTA                                            IOTA\n")),(0,s.kt)("p",null,"Until the network has confirmed the transaction, the status of your token balance will be pending (",(0,s.kt)("inlineCode",{parentName:"p"},"[PEND]"),"). Pending token balances can not be spent, wait until status becomes ",(0,s.kt)("inlineCode",{parentName:"p"},"[ OK ]"),". You can call the ",(0,s.kt)("inlineCode",{parentName:"p"},"balance")," command again to check for status changes."),(0,s.kt)("h2",{id:"creating-digital-assets"},"Creating Digital Assets"),(0,s.kt)("p",null,"Digital assets are tokens with a special attribute, namely a color. A color is a sequence of 32 bytes represented as a base58 encoded string. The color of a token is derived from the unique transaction that created the asset. Therefore, it is not possible to create assets with the same color in a subsequent transaction."),(0,s.kt)("p",null,'The transaction "minting" the assets can specify the amount of tokens to be created with the unique color. '),(0,s.kt)("p",null,"You can create assets with the cli-wallet executing the ",(0,s.kt)("inlineCode",{parentName:"p"},"create-asset")," command:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet create-asset -name MyUniqueToken -symbol MUT -amount 1000\n")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"The ",(0,s.kt)("inlineCode",{parentName:"li"},"name")," flag specifies the name of the asset."),(0,s.kt)("li",{parentName:"ul"},"The ",(0,s.kt)("inlineCode",{parentName:"li"},"symbol")," flag specifies the symbol of the asset."),(0,s.kt)("li",{parentName:"ul"},"The ",(0,s.kt)("inlineCode",{parentName:"li"},"amount")," flag specifies the amount of asset tokens to create.")),(0,s.kt)("p",null,"Expected output:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"IOTA 2.0 DevNet CLI-Wallet 0.2\n\nCreating 1000 tokens with the color 'HJdkZkn6MKda9fNuXFQZ8Dzdzu1wvuSUQp8QX1AMH4wn' ...   [DONE]\n")),(0,s.kt)("p",null,"If you execute the ",(0,s.kt)("inlineCode",{parentName:"p"},"balance")," command shortly after, you will notice that the wallet balances have changed:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet balance\nIOTA 2.0 DevNet CLI-Wallet 0.2\n\nAvailable Token Balances\n\nSTATUS  BALANCE                 COLOR                                           TOKEN NAME\n------  ---------------         --------------------------------------------    -------------------------\n[PEND]  999000                  IOTA                                            IOTA\n[PEND]  1000                    HJdkZkn6MKda9fNuXFQZ8Dzdzu1wvuSUQp8QX1AMH4wn    MyUniqueToken\n")),(0,s.kt)("p",null,"To create ",(0,s.kt)("inlineCode",{parentName:"p"},"myUniqueToken"),", the wallet has tagged 1000 IOTA tokens with the color ",(0,s.kt)("inlineCode",{parentName:"p"},"HJdkZkn6MKda9fNuXFQZ8Dzdzu1wvuSUQp8QX1AMH4wn"),". The IOTA balance has decreased, but we have received assets in return for the used IOTAs. The created asset tokens behave exactly like other IOTA tokens, they can be transferred without fees to any address."),(0,s.kt)("h3",{id:"fetching-information-of-a-digital-asset"},"Fetching Information of a Digital Asset"),(0,s.kt)("p",null,"In the ",(0,s.kt)("a",{parentName:"p",href:"#creating-digital-assets"},"previous example"),", we have created a digital asset called ",(0,s.kt)("inlineCode",{parentName:"p"},"MyUniqueToken"),". The wallet knows it's name, symbol and initial supply as we provided this input while creating it. The network however does not store this information, it only knows its unique identifier, the assetID (or color)."),(0,s.kt)("p",null,"To help others discover an asset's  attributes, when you create an asset the ",(0,s.kt)("inlineCode",{parentName:"p"},"cli-wallet")," will automatically send this information to a metadata registry service."),(0,s.kt)("p",null,"When you receive a locally unknown asset to your wallet, it queries this registry service for the metadata. You can also query this metadata yourself by running the ",(0,s.kt)("inlineCode",{parentName:"p"},"asset-info")," command in the wallet:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet asset-info -id HJdkZkn6MKda9fNuXFQZ8Dzdzu1wvuSUQp8QX1AMH4wn\n")),(0,s.kt)("p",null,"Expected output:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"IOTA 2.0 DevNet CLI-Wallet 0.2\n\nAsset Info\n\nPROPERTY                        VALUE\n-----------------------         --------------------------------------------\nName                            MyUniqueToken\nSymbol                          MUT\nAssetID(color)                  HJdkZkn6MKda9fNuXFQZ8Dzdzu1wvuSUQp8QX1AMH4wn\nInitial Supply                  1000\nCreating Transaction            G7ergf7YzVUSqQMS69jGexYtihbhpsvELEsPHWToYtKj\nNetwork                         test\n")),(0,s.kt)("h2",{id:"sending-tokens-and-assets"},"Sending Tokens and Assets"),(0,s.kt)("p",null,"Funds in IOTA are tied to addresses. Only the owner of the private key behind the address is able to spend (move) the funds, let them be IOTA tokens or digital assets.  In previous sections, you have ",(0,s.kt)("a",{parentName:"p",href:"#requesting-tokens"},"requested funds")," from the faucet, which actually sent\nthese tokens to an address provided by your wallet. When you created ",(0,s.kt)("inlineCode",{parentName:"p"},"MyUniqueToken"),", the wallet internally generated a new address\nto hold the assets. You may examine the addresses used by the wallet by executing the ",(0,s.kt)("inlineCode",{parentName:"p"},"address -list")," command:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet address -list\n")),(0,s.kt)("p",null,"Expected output:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"IOTA 2.0 DevNet CLI-Wallet 0.2\n\nINDEX   ADDRESS                                         SPENT\n-----   --------------------------------------------    -----\n0       19ZD79gRvVzXpQV4QfpY5gefqgrBA4gp11weeyqbY89FK   true\n1       1BbywJFGFtDFXpZidmjN39d8cVWUskT2MhbFqSrmVs3qi   false\n")),(0,s.kt)("p",null,"Consequently, when you wish to send tokens, you need to provide an address where to send the tokens to. "),(0,s.kt)("h3",{id:"simple-send"},"Simple Send"),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"send-funds")," command can be used to send IOTA or colored tokens to any address. You can run the following command to see what options you have:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet send-funds -help\n")),(0,s.kt)("p",null,"Expected output:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},'IOTA 2.0 DevNet CLI-Wallet 0.2\n\nUSAGE:\n  cli-wallet send-funds [OPTIONS]\n\nOPTIONS:\n  -access-mana-id string\n        node ID to pledge access mana to\n  -amount int\n        the amount of tokens that are supposed to be sent\n  -color string\n        (optional) color of the tokens to transfer (default "IOTA")\n  -consensus-mana-id string\n        node ID to pledge consensus mana to\n  -dest-addr string\n        destination address for the transfer\n  -fallb-addr string\n        (optional) fallback address that can claim back the (unspent) sent funds after fallback deadline\n  -fallb-deadline int\n        (optional) unix timestamp after which only the fallback address can claim the funds back\n  -help\n        show this help screen\n  -lock-until int\n        (optional) unix timestamp until which time the sent funds are locked from spending\n')),(0,s.kt)("p",null,"You can ignore the mana pledge options, as your wallet can derive pledge IDs automatically. The most important options are:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"amount")," is the amount of token you want to send."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"color")," is an optional flag to send digital assets with a certain color. When not specified, it defaults to the color of the IOTA token."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"dest-addr")," is the destination address for the transfer. You will have to set this to the address you wish to transfer tokens to."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"fallb-addr")," and ",(0,s.kt)("inlineCode",{parentName:"li"},"fallb-deadline")," are optional flags to initiate a conditional transfer. A conditional transfer has a fallback deadline set, after which, only the ",(0,s.kt)("inlineCode",{parentName:"li"},"fallback-address")," can unlock the funds. Before the fallback deadline, it is only the receiver of the funds who can spend the funds. Therefore, conditional transfers have to be claimed by the receiving party before the deadline expires.    "),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"lock-until")," is an optional flag for a simple time locking mechanism. Before the time lock expires, the funds are locked and can not be spent by the owner.")),(0,s.kt)("p",null,"To send 500 ",(0,s.kt)("inlineCode",{parentName:"p"},"MyUniqueTokens")," to the address ",(0,s.kt)("inlineCode",{parentName:"p"},"1E5Q82XTF5QGyC598br9oCj71cREyjD1CGUk2gmaJaFQt"),", you have to tell the wallet that ",(0,s.kt)("inlineCode",{parentName:"p"},"MyUniqueTokens")," are of color ",(0,s.kt)("inlineCode",{parentName:"p"},"HJdkZkn6MKda9fNuXFQZ8Dzdzu1wvuSUQp8QX1AMH4wn"),", as shown in the following command:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet send-funds -amount 500 -color HJdkZkn6MKda9fNuXFQZ8Dzdzu1wvuSUQp8QX1AMH4wn -dest-addr 1E5Q82XTF5QGyC598br9oCj71cREyjD1CGUk2gmaJaFQt\n")),(0,s.kt)("h3",{id:"time-locked-sending"},"Time Locked Sending"),(0,s.kt)("p",null,"If you don't want the receiver to be able to spend the tokens you have sent right away, you should execute the ",(0,s.kt)("inlineCode",{parentName:"p"},"send-funds")," command with the ",(0,s.kt)("inlineCode",{parentName:"p"},"-lock-until")," flag. The ",(0,s.kt)("inlineCode",{parentName:"p"},"-lock-until")," flag expects a unix timestamp. For example, on linux, you can get a unix timestamp 7 days in the future by executing:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},'date -d "+7 days" +%s\n1621426409\n')),(0,s.kt)("p",null,"Once you have a unix timestamp, you can execute the transfer by running:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"$ ./cli-wallet send-funds -amount 500 -dest-addr 1E5Q82XTF5QGyC598br9oCj71cREyjD1CGUk2gmaJaFQt -lock-until 1621426409\n")),(0,s.kt)("h3",{id:"conditional-sending"},"Conditional Sending"),(0,s.kt)("p",null,"You have the option to specify a fallback unlocking mechanism on the tokens that you send. If the recipient doesn't claim the funds before the fallback deadline you specify expires, the fallback address can essentially take back the tokens."),(0,s.kt)("p",null,"If you want to send some IOTAs, but if the receiver doesn't claim them for a week you want to\nhave them back you should use the ",(0,s.kt)("inlineCode",{parentName:"p"},"-fallb-addr")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"-fallb-dealine")," flags when executing the ",(0,s.kt)("inlineCode",{parentName:"p"},"send-funds")," command."),(0,s.kt)("p",null,"If you want to use your own wallet as fallback address, you can get your wallet's receive by running ",(0,s.kt)("inlineCode",{parentName:"p"},"./cli-wallet address -receive"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet address -receive\n")),(0,s.kt)("p",null,"Expected output:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"IOTA 2.0 DevNet CLI-Wallet 0.2\n\nLatest Receive Address: 17KoEZbWoBLRjBsb6oSyrSKVVqd7DVdHUWpxfBFbHaMSm\n")),(0,s.kt)("p",null,"Once you have the desired fallback address, you can execute a transfer with a fallback address by running:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet send-funds -amount 500 -dest-addr 1E5Q82XTF5QGyC598br9oCj71cREyjD1CGUk2gmaJaFQt \\\n-fallb-addr 17KoEZbWoBLRjBsb6oSyrSKVVqd7DVdHUWpxfBFbHaMSm --fallb-deadline 1621426409\n")),(0,s.kt)("p",null,"When you receive conditional funds, they will be displayed on the balance page in the wallet:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet balance\nIOTA 2.0 DevNet CLI-Wallet 0.2\n\nAvailable Token Balances\n\nSTATUS  BALANCE                 COLOR                                           TOKEN NAME\n------  ---------------         --------------------------------------------    -------------------------\n[ OK ]  500 I                   IOTA                                            IOTA\n\nConditional Token Balances - execute `claim-conditional` command to sweep these funds into wallet\n\nSTATUS  OWNED UNTIL                     BALANCE                 COLOR                                           TOKEN NAME\n------  ------------------------------  ---------------         --------------------------------------------    -------------------------\n[ OK ]  2021-05-19 14:13:29 +0200 CEST  500 I                   IOTA                                            IOTA\n")),(0,s.kt)("p",null,"As the output suggests, you need to execute the ",(0,s.kt)("inlineCode",{parentName:"p"},"claim-conditional")," command to claim these funds:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet claim-conditional\n")),(0,s.kt)("p",null,"Expected output:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"IOTA 2.0 DevNet CLI-Wallet 0.2\n\nClaiming conditionally owned funds... [DONE]\n")),(0,s.kt)("p",null,"After claiming the funds, you can see your balance has been updated by running:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet balance\n")),(0,s.kt)("p",null,"Expected output:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"IOTA 2.0 DevNet CLI-Wallet 0.2\n\nAvailable Token Balances\n\nSTATUS  BALANCE                 COLOR                                           TOKEN NAME\n------  ---------------         --------------------------------------------    -------------------------\n[PEND]  500                     IOTA                                            IOTA\n")),(0,s.kt)("h2",{id:"creating-nfts"},"Creating NFTs"),(0,s.kt)("p",null,"NFTs are non-fungible tokens that have unique properties. In IOTA, NFTs are represented as non-forkable, uniquely identifiable outputs. When you spend an NFT, the transaction will only be considered valid if it satisfies the constraints defined in the outputs. For example, the immutable data attached to the output can not change. Therefore, we can create an NFT and record immutable metadata in its output."),(0,s.kt)("p",null,"You can list the option for the ",(0,s.kt)("inlineCode",{parentName:"p"},"create-nft")," command by running ",(0,s.kt)("inlineCode",{parentName:"p"},"./cli-wallet create-nft -help"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},'./cli-wallet create-nft -help\nIOTA 2.0 DevNet CLI-Wallet 0.2\n\nUSAGE:\n  cli-wallet create-nft [OPTIONS]\n\nOPTIONS:\n  -access-mana-id string\n        node ID to pledge access mana to\n  -color string\n        color of the tokens that should be deposited into the nft upon creation (on top of the minimum required) (default "IOTA")\n  -consensus-mana-id string\n        node ID to pledge consensus mana to\n  -help\n        show this help screen\n  -immutable-data string\n        path to the file containing the immutable data that shall be attached to the nft\n  -initial-amount int\n        the amount of tokens that should be deposited into the nft upon creation (on top of the minimum required)\n')),(0,s.kt)("p",null,"None of the flags are strictly required to mint an NFT, so we could just execute the command as it is. However, in most cases, you will want to attach immutable metadata to it, which is only possible during creation. Each NFT must have some IOTAs backing it (locked into its output) to prevent bloating the ledger database. Currently, the minimum requirement is 100 IOTA tokens, but bear in mind that it might change in the future. On top of the minimum required amount IOTAs, you can lock any additional funds into the NFT. You can use the ",(0,s.kt)("inlineCode",{parentName:"p"},"-initial-amount")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"-color")," flags to do so."),(0,s.kt)("p",null,"To attach immutable data to the NFT, you should define a path to a file that holds the metadata. The wallet will read the byte content of the file, and attach it to the NFT. Currently, the maximum allowed metadata file size is 4 kilobytes. You should use the ",(0,s.kt)("inlineCode",{parentName:"p"},"-immutable-data")," flag to specify a path to a file that holds the metadata."),(0,s.kt)("p",null,"For example, you can create a ",(0,s.kt)("inlineCode",{parentName:"p"},"nft_metadata.json")," file in the directory of the cli-wallet with the following content:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "title": "Asset Metadata",\n  "type": "object",\n  "properties": {\n    "name": {\n      "type": "string",\n      "description": "MyFirstNFT"\n    },\n    "description": {\n      "type": "string",\n      "description": "My very first NFT that has this metadata attached to it."\n    },\n    "image": {\n      "type": "string",\n      "description": "<uri to resource holding the content of my first NFT>"\n    }\n  }\n}\n')),(0,s.kt)("p",null,"The above JSON file is just a template, you can define any binary data that fits the size limit to be attached to the NFT."),(0,s.kt)("p",null,"After you have created your data file, you can create the NFT by executing:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet create-nft -immutable-data nft_metadata.json\n")),(0,s.kt)("p",null,"Expected output:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"IOTA 2.0 DevNet CLI-Wallet 0.2\n\nCreated NFT with ID:  gSfeBrWp1HwDLwSL7rt1qEMM59YBFZ4iBgAqHuqaQHo5\nCreating NFT ... [DONE]\n")),(0,s.kt)("p",null,"The created NFT's unique identifier is ",(0,s.kt)("inlineCode",{parentName:"p"},"gSfeBrWp1HwDLwSL7rt1qEMM59YBFZ4iBgAqHuqaQHo5"),", which is also a valid IOTA address. Navigate to a node dashboard/explorer and search for the address. On a node dashboard, you would see something like this:"),(0,s.kt)("p",null,(0,s.kt)("a",{target:"_blank",href:n(46656).Z},(0,s.kt)("img",{alt:"Created NFT Example",src:n(66249).Z,width:"1110",height:"1214"}))),(0,s.kt)("p",null,"The immutable data field contains the attached binary metadata (encoded in base64 in the node dashboard)."),(0,s.kt)("p",null,"The NFT is also displayed on the balance page of the cli-wallet:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet balance\n")),(0,s.kt)("p",null,"Expected output:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"IOTA 2.0 DevNet CLI-Wallet 0.2\n\nAvailable Token Balances\n\nSTATUS  BALANCE                 COLOR                                           TOKEN NAME\n------  ---------------         --------------------------------------------    -------------------------\n[ OK ]  500 MUT                 HJdkZkn6MKda9fNuXFQZ8Dzdzu1wvuSUQp8QX1AMH4wn    MyUniqueToken\n[ OK ]  996200 I                IOTA                                            IOTA\n\nOwned NFTs (Governance Controlled Aliases)\n\nSTATUS  NFT ID (ALIAS ID)                               BALANCE                 COLOR                                           TOKEN NAME\n------  --------------------------------------------    ---------------         --------------------------------------------    -------------------------\n[ OK ]  gSfeBrWp1HwDLwSL7rt1qEMM59YBFZ4iBgAqHuqaQHo5    100                     IOTA                                            IOTA\n")),(0,s.kt)("h2",{id:"transferring-nfts"},"Transferring NFTs"),(0,s.kt)("p",null,"You can use the ",(0,s.kt)("inlineCode",{parentName:"p"},"transfer-nft")," command to send NFT.  You can run the ",(0,s.kt)("inlineCode",{parentName:"p"},"transfer-nft")," command with the ",(0,s.kt)("inlineCode",{parentName:"p"},"-help")," flagTo view the available options."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet transfer-nft -help\nIOTA 2.0 DevNet CLI-Wallet 0.2\n\nUSAGE:\n  cli-wallet transfer-nft [OPTIONS]\n\nOPTIONS:\n  -access-mana-id string\n        node ID to pledge access mana to\n  -consensus-mana-id string\n        node ID to pledge consensus mana to\n  -dest-addr string\n        destination address for the transfer\n  -help\n        show this help screen\n  -id string\n        unique identifier of the nft that should be transferred\n  -reset-delegation\n        defines whether to reset the delegation status of the alias being transferred\n  -reset-state-addr\n        defines whether to set the state address to dest-addr\n")),(0,s.kt)("p",null,"There are 2 mandatory flags that you will need to provide for a valid transfer: ",(0,s.kt)("inlineCode",{parentName:"p"},"-id")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"-dest-addr"),". ",(0,s.kt)("inlineCode",{parentName:"p"},"-id")," is unique identifier of the NFT that you wish to transfer, ",(0,s.kt)("inlineCode",{parentName:"p"},"-dest-addr")," is the destination address."),(0,s.kt)("p",null,"The following command will send some of the ",(0,s.kt)("inlineCode",{parentName:"p"},"MyUniqueTokens")," created in the previous example to ",(0,s.kt)("inlineCode",{parentName:"p"},"1E5Q82XTF5QGyC598br9oCj71cREyjD1CGUk2gmaJaFQt"),": "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet transfer-nft -id gSfeBrWp1HwDLwSL7rt1qEMM59YBFZ4iBgAqHuqaQHo5 -dest-addr 1E5Q82XTF5QGyC598br9oCj71cREyjD1CGUk2gmaJaFQt\n")),(0,s.kt)("p",null,"Expected output:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"IOTA 2.0 DevNet CLI-Wallet 0.2\n\nTransferring NFT... [DONE]\n")),(0,s.kt)("h2",{id:"destroying-nfts"},"Destroying NFTs"),(0,s.kt)("p",null,"The owner of an NFT has the ability to destroy it. When an NFT is destroyed, all of its balance will be transferred to the NFT's current owner, and the alias output representing the NFT will be spent without creating a corresponding next alias output."),(0,s.kt)("p",null,"You can use the ",(0,s.kt)("inlineCode",{parentName:"p"},"destroy-nft")," command to destroy a NFT.  You can run the ",(0,s.kt)("inlineCode",{parentName:"p"},"destroy-nft")," command with the ",(0,s.kt)("inlineCode",{parentName:"p"},"-help")," flag to view the available options."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet destroy-nft -help\nIOTA 2.0 DevNet CLI-Wallet 0.2\n\nUSAGE:\n  cli-wallet destroy-nft [OPTIONS]\n\nOPTIONS:\n  -access-mana-id string\n        node ID to pledge access mana to\n  -consensus-mana-id string\n        node ID to pledge consensus mana to\n  -help\n        show this help screen\n  -id string\n        unique identifier of the nft that should be destroyed\n\n")),(0,s.kt)("p",null,"The following example shows how to create a NFT, and destroy it right after."),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Create the NFT"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet create-nft\n")),(0,s.kt)("p",{parentName:"li"},"Expected output:"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre"},"IOTA 2.0 DevNet CLI-Wallet 0.2\n\nCreated NFT with ID:  bdrvyKvaE6CZUEbdRDK57oBCRb2SLUyE8padFGxrV3zg\nCreating NFT ... [DONE]\n"))),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Check the balance page shows that the NFT status is ",(0,s.kt)("inlineCode",{parentName:"p"},"OK"),":"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet balance\n")),(0,s.kt)("p",{parentName:"li"},"Expected output:"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"IOTA 2.0 DevNet CLI-Wallet 0.2\n\nAvailable Token Balances\n\nSTATUS  BALANCE                 COLOR                                           TOKEN NAME\n------  ---------------         --------------------------------------------    -------------------------\n[ OK ]  500 MUT                 HJdkZkn6MKda9fNuXFQZ8Dzdzu1wvuSUQp8QX1AMH4wn    MyUniqueToken\n[ OK ]  996100 I                IOTA                                            IOTA\n\nOwned NFTs (Governance Controlled Aliases)\n\nSTATUS  NFT ID (ALIAS ID)                               BALANCE                 COLOR                                           TOKEN NAME\n------  --------------------------------------------    ---------------         --------------------------------------------    -------------------------\n[ OK ]  bdrvyKvaE6CZUEbdRDK57oBCRb2SLUyE8padFGxrV3zg    100                     IOTA                                            IOTA\n"))),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Destroy the nft:"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet destroy-nft -id bdrvyKvaE6CZUEbdRDK57oBCRb2SLUyE8padFGxrV3zg\n")),(0,s.kt)("p",{parentName:"li"},"Expected output:"),(0,s.kt)("pre",{parentName:"li"},(0,s.kt)("code",{parentName:"pre"},"IOTA 2.0 DevNet CLI-Wallet 0.2\n\nDestroying NFT... [DONE]\n")))),(0,s.kt)("h2",{id:"managing-nft-owned-assets"},"Managing NFT Owned Assets"),(0,s.kt)("p",null,"An NFT is not only a valid IOTA address via its NFT ID, but it is also stored as an output in the ledger. Therefore, the NFT is not only capable of receiving funds to its address, but the owner can directly manage the funds held in the NFT output."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"The owner may deposit assets into an NFT, or withdraw assets from there,  essentially using it as a standalone wallet."),(0,s.kt)("li",{parentName:"ul"},"Other users in the network can send any asset to the NFT address, that will be owned by the NFT. The owner might choose to deposit those funds into the NFT, or sweep them into their own wallet.")),(0,s.kt)("h3",{id:"deposit-assets-into-owned-nft"},"Deposit Assets Into Owned NFT"),(0,s.kt)("p",null,"You can use the ",(0,s.kt)("inlineCode",{parentName:"p"},"deposit-to-nft")," command to transfer tokens to a NFT. You can run the ",(0,s.kt)("inlineCode",{parentName:"p"},"deposit-to-nft")," command with the ",(0,s.kt)("inlineCode",{parentName:"p"},"-help")," flag to view the available options."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},'./cli-wallet deposit-to-nft -help\nIOTA 2.0 DevNet CLI-Wallet 0.2\n\nUSAGE:\n  cli-wallet deposit-to-nft [OPTIONS]\n\nOPTIONS:\n  -access-mana-id string\n        node ID to pledge access mana to\n  -amount int\n        the amount of tokens that are supposed to be deposited\n  -color string\n        color of funds to deposit (default "IOTA")\n  -consensus-mana-id string\n        node ID to pledge consensus mana to\n  -help\n        show this help screen\n  -id string\n        unique identifier of the nft to deposit to\n')),(0,s.kt)("p",null,"To deposit some previously created ",(0,s.kt)("inlineCode",{parentName:"p"},"MyUniqueTokens")," into the NFT, we need to specify the following flags:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"-id")," the NFT ID to deposit to."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"-amount")," amount of assets to deposit."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"-color")," asset color to deposit.")),(0,s.kt)("p",null,"You can check your balance before the transfer by running:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet balance\n")),(0,s.kt)("p",null,"Expected output:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"IOTA 2.0 DevNet CLI-Wallet 0.2\n\nAvailable Token Balances\n\nSTATUS  BALANCE                 COLOR                                           TOKEN NAME\n------  ---------------         --------------------------------------------    -------------------------\n[ OK ]  996300 I                IOTA                                            IOTA\n[ OK ]  500 MUT                 HJdkZkn6MKda9fNuXFQZ8Dzdzu1wvuSUQp8QX1AMH4wn    MyUniqueToken\n\nOwned NFTs (Governance Controlled Aliases)\n\nSTATUS  NFT ID (ALIAS ID)                               BALANCE                 COLOR                                           TOKEN NAME\n------  --------------------------------------------    ---------------         --------------------------------------------    -------------------------\n[ OK ]  f1BW8jcdDn3staviCVbVz54NqVwsshb5gpNLqY6Rrgrg    100                     IOTA                                            IOTA\n")),(0,s.kt)("p",null,"You can run the following command to deposit 500 ",(0,s.kt)("inlineCode",{parentName:"p"},"MyUniqueTokens")," to the nft with id ",(0,s.kt)("inlineCode",{parentName:"p"},"f1BW8jcdDn3staviCVbVz54NqVwsshb5gpNLqY6Rrgrg"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet deposit-to-nft -id f1BW8jcdDn3staviCVbVz54NqVwsshb5gpNLqY6Rrgrg -amount 500 -color HJdkZkn6MKda9fNuXFQZ8Dzdzu1wvuSUQp8QX1AMH4wn\n")),(0,s.kt)("p",null,"Expected output:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"IOTA 2.0 DevNet CLI-Wallet 0.2\nDepositing funds into NFT ... [DONE]\n")),(0,s.kt)("p",null,"After the transfer is successful, you can recheck your balance, and it should show your NFT now has 500 ",(0,s.kt)("inlineCode",{parentName:"p"},"MyUniqueTokens"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet balance\n")),(0,s.kt)("p",null,"Expected output:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"IOTA 2.0 DevNet CLI-Wallet 0.2\n\nAvailable Token Balances\n\nSTATUS  BALANCE                 COLOR                                           TOKEN NAME\n------  ---------------         --------------------------------------------    -------------------------\n[ OK ]  996300 I                IOTA                                            IOTA\n\nOwned NFTs (Governance Controlled Aliases)\n\nSTATUS  NFT ID (ALIAS ID)                               BALANCE                 COLOR                                           TOKEN NAME\n------  --------------------------------------------    ---------------         --------------------------------------------    -------------------------\n[ OK ]  f1BW8jcdDn3staviCVbVz54NqVwsshb5gpNLqY6Rrgrg    100                     IOTA                                            IOTA\n                                                        500                     HJdkZkn6MKda9fNuXFQZ8Dzdzu1wvuSUQp8QX1AMH4wn    MyUniqueToken\n")),(0,s.kt)("h3",{id:"withdrawing-assets-from-nft"},"Withdrawing Assets From NFT"),(0,s.kt)("p",null,"You can use the ",(0,s.kt)("inlineCode",{parentName:"p"},"withdraw-from-nft")," command to withdraw tokens from a NFT.  If the withdrawal leaves less than the minimum required funds in the NFT, the transaction will fail. You can run the ",(0,s.kt)("inlineCode",{parentName:"p"},"withdraw-from-nft")," command with the ",(0,s.kt)("inlineCode",{parentName:"p"},"-help")," flag to view the available options."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},'./cli-wallet withdraw-from-nft -help\nIOTA 2.0 DevNet CLI-Wallet 0.2\n\nUSAGE:\n  cli-wallet withdraw-from-nft [OPTIONS]\n\nOPTIONS:\n  -access-mana-id string\n        node ID to pledge access mana to\n  -amount int\n        the amount of tokens that are supposed to be withdrew\n  -color string\n        color of funds to withdraw (default "IOTA")\n  -consensus-mana-id string\n        node ID to pledge consensus mana to\n  -dest-addr string\n        (optional) address to send the withdrew tokens to\n  -help\n        show this help screen\n  -id string\n        unique identifier of the nft to withdraw from\n')),(0,s.kt)("p",null,"You can execute the following command to withdraw the previously deposited ",(0,s.kt)("inlineCode",{parentName:"p"},"MyUniqueTokens"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet withdraw-from-nft -id f1BW8jcdDn3staviCVbVz54NqVwsshb5gpNLqY6Rrgrg -amount 500 -color HJdkZkn6MKda9fNuXFQZ8Dzdzu1wvuSUQp8QX1AMH4wn\n")),(0,s.kt)("p",null,"Expected output:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"IOTA 2.0 DevNet CLI-Wallet 0.2\n\nWithdrawing funds from NFT... [DONE]\n")),(0,s.kt)("p",null,"Once the transaction has been confirmed, you will see the updated balance:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet balance\n")),(0,s.kt)("p",null,"Expected output:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"IOTA 2.0 DevNet CLI-Wallet 0.2\n\nAvailable Token Balances\n\nSTATUS  BALANCE                 COLOR                                           TOKEN NAME\n------  ---------------         --------------------------------------------    -------------------------\n[ OK ]  500 MUT                 HJdkZkn6MKda9fNuXFQZ8Dzdzu1wvuSUQp8QX1AMH4wn    MyUniqueToken\n[ OK ]  996300 I                IOTA                                            IOTA\n\nOwned NFTs (Governance Controlled Aliases)\n\nSTATUS  NFT ID (ALIAS ID)                               BALANCE                 COLOR                                           TOKEN NAME\n------  --------------------------------------------    ---------------         --------------------------------------------    -------------------------\n[ OK ]  f1BW8jcdDn3staviCVbVz54NqVwsshb5gpNLqY6Rrgrg    100                     IOTA                                            IOTA\n")),(0,s.kt)("h3",{id:"sweep-nft-owned-funds"},"Sweep NFT Owned Funds"),(0,s.kt)("p",null,"You can use the ",(0,s.kt)("inlineCode",{parentName:"p"},"sweep-nft-owned-fun")," command to collect all funds currently stored in a NFT. You can run the ",(0,s.kt)("inlineCode",{parentName:"p"},"sweep-nft-owned-fun")," command with the ",(0,s.kt)("inlineCode",{parentName:"p"},"-help")," flag to view the available options."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet sweep-nft-owned-funds -help\nIOTA 2.0 DevNet CLI-Wallet 0.2\n\nUSAGE:\n  cli-wallet sweep-nft-owned-funds [OPTIONS]\n\nOPTIONS:\n  -access-mana-id string\n        node ID to pledge access mana to\n  -consensus-mana-id string\n        node ID to pledge consensus mana to\n  -help\n        show this help screen\n  -id string\n        unique identifier of the nft that should be checked for outputs with funds\n  -to string\n        optional address where to sweep\n")),(0,s.kt)("p",null,"The only mandatory flag is ",(0,s.kt)("inlineCode",{parentName:"p"},"-id"),", as it specifies which NFT ID (address) to scan for funds."),(0,s.kt)("p",null,"In the following example, a sender has sent token to our NFT ",(0,s.kt)("inlineCode",{parentName:"p"},"f1BW8jcdDn3staviCVbVz54NqVwsshb5gpNLqY6Rrgrg")," with a normal ",(0,s.kt)("inlineCode",{parentName:"p"},"send-funds")," command:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./senders-wallet send-funds -amount 1000000 -dest-addr f1BW8jcdDn3staviCVbVz54NqVwsshb5gpNLqY6Rrgrg\n")),(0,s.kt)("p",null,"You can execute the ",(0,s.kt)("inlineCode",{parentName:"p"},"sweep-nft-owned-funds")," command to transfer these funds into our wallet:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet sweep-nft-owned-funds -id f1BW8jcdDn3staviCVbVz54NqVwsshb5gpNLqY6Rrgrg\n")),(0,s.kt)("p",null,"Expected output:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"IOTA 2.0 DevNet CLI-Wallet 0.2\n\nSweeping NFT owned funds... [DONE]\n")),(0,s.kt)("p",null,"If you check the balance, it should be updated.  So the wallet contains 1 MI more:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet balance\n")),(0,s.kt)("p",null,"Expected output:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"IOTA 2.0 DevNet CLI-Wallet 0.2\n\nAvailable Token Balances\n\nSTATUS  BALANCE                 COLOR                                           TOKEN NAME\n------  ---------------         --------------------------------------------    -------------------------\n[ OK ]  500 MUT                 HJdkZkn6MKda9fNuXFQZ8Dzdzu1wvuSUQp8QX1AMH4wn    MyUniqueToken\n[ OK ]  1996300 I               IOTA                                            IOTA\n\nOwned NFTs (Governance Controlled Aliases)\n\nSTATUS  NFT ID (ALIAS ID)                               BALANCE                 COLOR                                           TOKEN NAME\n------  --------------------------------------------    ---------------         --------------------------------------------    -------------------------\n[ OK ]  f1BW8jcdDn3staviCVbVz54NqVwsshb5gpNLqY6Rrgrg    100                     IOTA                                            IOTA\n")),(0,s.kt)("h3",{id:"sweep-nft-owned-nfts"},"Sweep NFT Owned NFTs"),(0,s.kt)("p",null,"NFTs can own other NFTs, that in turn can own other NFTs and so on... wow, NFTception!\nLet's say your friend created an NFT, and transferred it to your NFT's ID ",(0,s.kt)("inlineCode",{parentName:"p"},"f1BW8jcdDn3staviCVbVz54NqVwsshb5gpNLqY6Rrgrg"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./your-friends-wallet create-nft\n")),(0,s.kt)("p",null,"Expected output:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"IOTA 2.0 DevNet CLI-Wallet 0.2\n\nCreated NFT with ID:  faf9tkdBfcTv2AgPm3Zt8duX4iUGKjqbEyrdBYsUb2hi\nCreating NFT ... [DONE]\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"./your-friends-wallet transfer-nft -id faf9tkdBfcTv2AgPm3Zt8duX4iUGKjqbEyrdBYsUb2hi -dest-addr f1BW8jcdDn3staviCVbVz54NqVwsshb5gpNLqY6Rrgrg\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"IOTA 2.0 DevNet CLI-Wallet 0.2\n\nTransferring NFT... [DONE]\n")),(0,s.kt)("p",null,"Your NFT ",(0,s.kt)("inlineCode",{parentName:"p"},"f1BW8jcdDn3staviCVbVz54NqVwsshb5gpNLqY6Rrgrg")," now owns NFT ",(0,s.kt)("inlineCode",{parentName:"p"},"faf9tkdBfcTv2AgPm3Zt8duX4iUGKjqbEyrdBYsUb2hi"),".\nTo sweep the owned NFT into your wallet, execute the ",(0,s.kt)("inlineCode",{parentName:"p"},"sweep-nft-owned-nft")," command:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet sweep-nft-owned-nfts -help\nIOTA 2.0 DevNet CLI-Wallet 0.2\n\nUSAGE:\n  cli-wallet sweep-nft-owned-nfts [OPTIONS]\n\nOPTIONS:\n  -access-mana-id string\n        node ID to pledge access mana to\n  -consensus-mana-id string\n        node ID to pledge consensus mana to\n  -help\n        show this help screen\n  -id string\n        unique identifier of the nft that should be checked for owning other nfts\n  -to string\n        optional address where to sweep\n")),(0,s.kt)("p",null,"All you need to specify is the ",(0,s.kt)("inlineCode",{parentName:"p"},"-id")," of your NFT that you would like to check for owned NFTs:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet sweep-nft-owned-nfts -id f1BW8jcdDn3staviCVbVz54NqVwsshb5gpNLqY6Rrgrg\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"IOTA 2.0 DevNet CLI-Wallet 0.2\n\nSwept NFT faf9tkdBfcTv2AgPm3Zt8duX4iUGKjqbEyrdBYsUb2hi into the wallet\nSweeping NFT owned NFTs... [DONE]\n")),(0,s.kt)("p",null,"That's it, your wallet owns ",(0,s.kt)("inlineCode",{parentName:"p"},"faf9tkdBfcTv2AgPm3Zt8duX4iUGKjqbEyrdBYsUb2hi")," now. If this NFT owned other funds or NFTs,\nyou would be able to sweep them into your wallet just like you did for ",(0,s.kt)("inlineCode",{parentName:"p"},"f1BW8jcdDn3staviCVbVz54NqVwsshb5gpNLqY6Rrgrg"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet balance\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"IOTA 2.0 DevNet CLI-Wallet 0.2\n\nAvailable Token Balances\n\nSTATUS  BALANCE                 COLOR                                           TOKEN NAME\n------  ---------------         --------------------------------------------    -------------------------\n[ OK ]  1996300 I               IOTA                                            IOTA\n[ OK ]  500 MUT                 HJdkZkn6MKda9fNuXFQZ8Dzdzu1wvuSUQp8QX1AMH4wn    MyUniqueToken\n\nOwned NFTs (Governance Controlled Aliases)\n\nSTATUS  NFT ID (ALIAS ID)                               BALANCE                 COLOR                                           TOKEN NAME\n------  --------------------------------------------    ---------------         --------------------------------------------    -------------------------\n[ OK ]  f1BW8jcdDn3staviCVbVz54NqVwsshb5gpNLqY6Rrgrg    100                     IOTA                                            IOTA\n[ OK ]  faf9tkdBfcTv2AgPm3Zt8duX4iUGKjqbEyrdBYsUb2hi    100                     IOTA                                            IOTA\n")),(0,s.kt)("h2",{id:"delegating-assets"},"Delegating Assets"),(0,s.kt)("p",null,'The primary use case of fund delegation in Coordicide is to enable refreshing a node\'s access mana without requiring\nthe use of a master key that has full control over the funds. A delegated key can not spend the funds, but can\n"refresh" the outputs holding the funds in a transaction that can pledge mana to any arbitrary nodes.'),(0,s.kt)("p",null,"A token holder can therefore keep their funds in secure cold storage, while delegating them to a node or third party\nto utilize the mana generated by the funds. Assuming there is demand for access mana in the network, the holder of the\nassets can then sell the generated mana to realize return on their assets."),(0,s.kt)("p",null,"Delegating funds via the cli-wallet is rather simple: you just need to execute the ",(0,s.kt)("inlineCode",{parentName:"p"},"delegate-funds")," command. By default,\nthe cli-wallet will delegate funds to the node that the wallet is connected to, unless you specify a delegation\naddress via the ",(0,s.kt)("inlineCode",{parentName:"p"},"-del-addr")," flag.\nspecify a valid IOTA address where to delegate to."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},'./cli-wallet delegate-funds -help\nIOTA 2.0 DevNet CLI-Wallet 0.2\n\nUSAGE:\n  cli-wallet delegate-funds [OPTIONS]\n\nOPTIONS:\n  -access-mana-id string\n        node ID to pledge access mana to\n  -amount int\n        the amount of tokens that should be delegated\n  -color string\n        color of the tokens that should delegated (default "IOTA")\n  -consensus-mana-id string\n        node ID to pledge consensus mana to\n  -del-addr string\n        address to delegate funds to. when omitted, wallet delegates to the node it is connected to\n  -help\n        show this help screen\n  -until int\n        unix timestamp until which the delegated funds are timelocked\n')),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Mandatory parameter is only the ",(0,s.kt)("inlineCode",{parentName:"li"},"-amount"),"."),(0,s.kt)("li",{parentName:"ul"},"Use the ",(0,s.kt)("inlineCode",{parentName:"li"},"-del-addr")," flag to delegate to arbitrary address."),(0,s.kt)("li",{parentName:"ul"},"You may specify a delegation deadline via the ",(0,s.kt)("inlineCode",{parentName:"li"},"-until")," flag. If this is set, the delegated party can not unlock\nthe funds for refreshing mana after the deadline expired, but the neither can the owner reclaim the funds before\nthat. If the ",(0,s.kt)("inlineCode",{parentName:"li"},"-until")," flag is omitted, the delegation is open-ended, the owner can reclaim the delegated funds at\nany time."),(0,s.kt)("li",{parentName:"ul"},"You can specify a certain asset to be delegated (",(0,s.kt)("inlineCode",{parentName:"li"},"-color"),"), default is IOTA.")),(0,s.kt)("p",null,"Let's delegate some funds to an address provided by a node in the network, ",(0,s.kt)("inlineCode",{parentName:"p"},"1EqJf5K1LJ6bVMCrxxxdZ6VNYoBTvEoXgxnbLJe7aqajc"),":"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet delegate-funds -amount 1000000 -del-addr 1EqJf5K1LJ6bVMCrxxxdZ6VNYoBTvEoXgxnbLJe7aqajc\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"IOTA 2.0 DevNet CLI-Wallet 0.2\n\nDelegating to address 1EqJf5K1LJ6bVMCrxxxdZ6VNYoBTvEoXgxnbLJe7aqajc\nDelegation ID is:  tGoTKjt2y277ssKax9stsZXfLGdf8bPj3TZFaUDcAEwK\nDelegating funds... [DONE]\n")),(0,s.kt)("p",null,"If we omitted the ",(0,s.kt)("inlineCode",{parentName:"p"},"-del-addr")," flag and its value, the wallet would have asked the node it is connected to, to provide\na delegation address. You can get this delegation address yourself as well by running the ",(0,s.kt)("inlineCode",{parentName:"p"},"server-status")," command in\nthe wallet, or querying the ",(0,s.kt)("inlineCode",{parentName:"p"},"/info")," endpoint of a node through the webapi."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet server-status\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"IOTA 2.0 DevNet CLI-Wallet 0.2\n\nServer ID:  2GtxMQD94KvDH1SJPJV7icxofkyV1njuUZKtsqKmtux5\nServer Synced:  true\nServer Version:  v0.5.9\nDelegation Address:  1HG9Z5NSiWTmT1HG65JLmn1jxQj7xUcVppKKi2vHAZLmr\n")),(0,s.kt)("p",null,"By running the ",(0,s.kt)("inlineCode",{parentName:"p"},"balance")," command, we can see the delegated funds:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet balance\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"IOTA 2.0 DevNet CLI-Wallet 0.2\n\nAvailable Token Balances\n\nSTATUS  BALANCE                 COLOR                                           TOKEN NAME\n------  ---------------         --------------------------------------------    -------------------------\n[ OK ]  500 MUT                 HJdkZkn6MKda9fNuXFQZ8Dzdzu1wvuSUQp8QX1AMH4wn    MyUniqueToken\n[ OK ]  996500 I                IOTA                                            IOTA\n\nDelegated Funds\n\nSTATUS  DELEGATION ID (ALIAS ID)                        BALANCE                 COLOR                                           TOKEN NAME\n------  --------------------------------------------    ---------------         --------------------------------------------    -------------------------\n[ OK ]  tGoTKjt2y277ssKax9stsZXfLGdf8bPj3TZFaUDcAEwK    1000000                 IOTA                                            IOTA\n")),(0,s.kt)("p",null,"To be able to reclaim the delegated funds, we will need the delegation ID of the delegated funds."),(0,s.kt)("h2",{id:"reclaiming-delegated-assets"},"Reclaiming Delegated Assets"),(0,s.kt)("p",null,"To reclaim delegated funds, you have to tell the cli-wallet the delegation ID that is displayed on the balance page.\nUse the ",(0,s.kt)("inlineCode",{parentName:"p"},"reclaim-delegated")," command once you got the delegation ID:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"}," ./cli-wallet reclaim-delegated -help\nIOTA 2.0 DevNet CLI-Wallet 0.2\n\nUSAGE:\n  cli-wallet reclaim-delegated [OPTIONS]\n\nOPTIONS:\n  -access-mana-id string\n        node ID to pledge access mana to\n  -consensus-mana-id string\n        node ID to pledge consensus mana to\n  -help\n        show this help screen\n  -id string\n        delegation ID that should be reclaimed\n  -to-addr string\n        optional address where to send reclaimed funds, wallet receive address by default\n")),(0,s.kt)("p",null,"To reclaim the funds delegated in the previous section, simply run:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet reclaim-delegated -id tGoTKjt2y277ssKax9stsZXfLGdf8bPj3TZFaUDcAEwK\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"IOTA 2.0 DevNet CLI-Wallet 0.2\n\nReclaimed delegation ID is:  tGoTKjt2y277ssKax9stsZXfLGdf8bPj3TZFaUDcAEwK\nReclaiming delegated fund... [DONE]\n")),(0,s.kt)("p",null,"The balance should appear in the ",(0,s.kt)("inlineCode",{parentName:"p"},"Available Balances")," section of the balance page:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"./cli-wallet balance\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"IOTA 2.0 DevNet CLI-Wallet 0.2\n\nAvailable Token Balances\n\nSTATUS  BALANCE                 COLOR                                           TOKEN NAME\n------  ---------------         --------------------------------------------    -------------------------\n[ OK ]  500 MUT                 HJdkZkn6MKda9fNuXFQZ8Dzdzu1wvuSUQp8QX1AMH4wn    MyUniqueToken\n[ OK ]  1996500 I               IOTA                                            IOTA\n")),(0,s.kt)("h2",{id:"common-flags"},"Common Flags"),(0,s.kt)("p",null,"As you may have noticed, there are some universal flags in many commands, namely:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"-help")," that brings up the command usage and help information,"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"access-mana-id")," that is the nodeID to which the transaction should pledge access mana to, and"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("inlineCode",{parentName:"li"},"consensus-mana-id")," that is the nodeID to which the transaction should pledge consensus mana to.")),(0,s.kt)("p",null,"The latter teo are determined by default by your wallet depending on which node you connect it to. However, if that node\ndoesn't filter user submitted transactions based on the mana pledge IDs, you are free to define which node to pledge\nmana to."),(0,s.kt)("h2",{id:"command-reference"},"Command Reference"),(0,s.kt)("h3",{id:"balance"},"balance"),(0,s.kt)("p",null,"Show the balances held by this wallet."),(0,s.kt)("h3",{id:"send-funds"},"send-funds"),(0,s.kt)("p",null,"Initiate a transfer of tokens or assets (funds)."),(0,s.kt)("h3",{id:"consolidate-funds"},"consolidate-funds"),(0,s.kt)("p",null,"Consolidate all available funds to one wallet address."),(0,s.kt)("h3",{id:"claim-conditional"},"claim-conditional"),(0,s.kt)("p",null,"Claim (move) conditionally owned funds into the wallet."),(0,s.kt)("h3",{id:"request-funds"},"request-funds"),(0,s.kt)("p",null,"Request funds from the testnet-faucet."),(0,s.kt)("h3",{id:"create-asset"},"create-asset"),(0,s.kt)("p",null,"Create an asset in the form of colored coins."),(0,s.kt)("h3",{id:"delegate-funds"},"delegate-funds"),(0,s.kt)("p",null,"Delegate funds to an address."),(0,s.kt)("h3",{id:"reclaim-delegated"},"reclaim-delegated"),(0,s.kt)("p",null,"Reclaim previously delegated funds."),(0,s.kt)("h3",{id:"create-nft"},"create-nft"),(0,s.kt)("p",null,"Create an NFT as an unforkable alias output."),(0,s.kt)("h3",{id:"transfer-nft"},"transfer-nft"),(0,s.kt)("p",null,"Transfer the ownership of an NFT."),(0,s.kt)("h3",{id:"destroy-nft"},"destroy-nft"),(0,s.kt)("p",null,"Destroy an NFT."),(0,s.kt)("h3",{id:"deposit-to-nft"},"deposit-to-nft"),(0,s.kt)("p",null,"Deposit funds into an NFT."),(0,s.kt)("h3",{id:"withdraw-from-nft"},"withdraw-from-nft"),(0,s.kt)("p",null,"Withdraw funds from an NFT."),(0,s.kt)("h3",{id:"sweep-nft-owned-funds-1"},"sweep-nft-owned-funds"),(0,s.kt)("p",null,"Sweep all available funds owned by NFT into the wallet."),(0,s.kt)("h3",{id:"sweep-nft-owned-nfts-1"},"sweep-nft-owned-nfts"),(0,s.kt)("p",null,"weep all available NFTs owned by NFT into the wallet."),(0,s.kt)("h3",{id:"address"},"address"),(0,s.kt)("p",null,"Start the address manager of this wallet."),(0,s.kt)("h3",{id:"init"},"init"),(0,s.kt)("p",null,"Generate a new wallet using a random seed."),(0,s.kt)("h3",{id:"server-status"},"server-status"),(0,s.kt)("p",null,"Display the server status."),(0,s.kt)("h3",{id:"pending-mana"},"pending-mana"),(0,s.kt)("p",null,"Display current pending mana of all outputs in the wallet grouped by address."),(0,s.kt)("h3",{id:"pledge-id"},"pledge-id"),(0,s.kt)("p",null,"Query nodeIDs accepted as pledge IDs in transaction by the node (server)."),(0,s.kt)("h3",{id:"help"},"help"),(0,s.kt)("p",null,"Display this help screen."))}h.isMDXComponent=!0},46656:function(e,t,n){t.Z=n.p+"assets/files/created_nft-bff115c7b096ec60d20190dce1d3f4a3.png"},66249:function(e,t,n){t.Z=n.p+"assets/images/created_nft-bff115c7b096ec60d20190dce1d3f4a3.png"},3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return h}});var a=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var r=a.createContext({}),d=function(e){var t=a.useContext(r),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=d(e.components);return a.createElement(r.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,s=e.originalType,r=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=d(n),h=l,m=c["".concat(r,".").concat(h)]||c[h]||p[h]||s;return n?a.createElement(m,i(i({ref:t},u),{},{components:n})):a.createElement(m,i({ref:t},u))}));function h(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var s=n.length,i=new Array(s);i[0]=c;var o={};for(var r in t)hasOwnProperty.call(t,r)&&(o[r]=t[r]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var d=2;d<s;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"}}]);