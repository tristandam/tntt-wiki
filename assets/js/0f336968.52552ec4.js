"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[93747],{72674:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return c}});var r=n(83117),o=n(80102),a=(n(67294),n(3905)),i=["components"],s={description:"Running a node is the best way to use IOTA. You have direct access to the Tangle and you help the IOTA network to become more distributed and resilient.",image:"/img/logo/bee_logo.png",keywords:["node","HTTP","API","ports","TCP","IOTA Network","REST"]},l=void 0,u={unversionedId:"getting_started/getting_started",id:"getting_started/getting_started",title:"getting_started",description:"Running a node is the best way to use IOTA. You have direct access to the Tangle and you help the IOTA network to become more distributed and resilient.",source:"@site/external/bee/documentation/docs/getting_started/getting_started.md",sourceDirName:"getting_started",slug:"/getting_started/",permalink:"/bee/getting_started/",editUrl:"https://github.com/iotaledger/bee/edit/dev/external/bee/documentation/docs/getting_started/getting_started.md",tags:[],version:"current",frontMatter:{description:"Running a node is the best way to use IOTA. You have direct access to the Tangle and you help the IOTA network to become more distributed and resilient.",image:"/img/logo/bee_logo.png",keywords:["node","HTTP","API","ports","TCP","IOTA Network","REST"]},sidebar:"mySidebar",previous:{title:"welcome",permalink:"/bee/welcome"},next:{title:"nodes_101",permalink:"/bee/getting_started/nodes_101"}},d={},c=[{value:"Recommended Requirements",id:"recommended-requirements",level:2}],p={toc:c};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"getting-started"},"Getting Started"),(0,a.kt)("p",null,"Running a node is the best way to use IOTA. By doing so, you have direct access to the Tangle instead of having to\nconnect to and trust someone else's node. Additionally, you help the IOTA network to become more distributed and resilient."),(0,a.kt)("p",null,"The node software is the backbone of the IOTA network. For an overview of tasks a node is responsible for, please\nsee ",(0,a.kt)("a",{parentName:"p",href:"/bee/getting_started/nodes_101"},"Node 101"),"."),(0,a.kt)("p",null,"To make sure that your device meets the minimum security requirements for running a node, please\nsee ",(0,a.kt)("a",{parentName:"p",href:"/bee/getting_started/security_101"},"Security 101"),"."),(0,a.kt)("h2",{id:"recommended-requirements"},"Recommended Requirements"),(0,a.kt)("p",null,"To handle a potential high rate of messages per second, nodes need enough computational power to run reliably, and\nshould have following minimum specs:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"4 cores or 4 vCPU"),(0,a.kt)("li",{parentName:"ul"},"8 GB RAM"),(0,a.kt)("li",{parentName:"ul"},"SSD storage"),(0,a.kt)("li",{parentName:"ul"},"A public IP address")),(0,a.kt)("p",null,"The amount of storage you need will depend on whether and how often you plan on pruning old data from your local\ndatabase."),(0,a.kt)("p",null,"Bee exposes different functionality on different ports:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"15600 TCP - Gossip protocol port"),(0,a.kt)("li",{parentName:"ul"},"14265 TCP - REST HTTP API port (optional)"),(0,a.kt)("li",{parentName:"ul"},"8081 TCP - Dashboard (optional)")),(0,a.kt)("p",null,"The mentioned ports are important for flawless node operation. The REST HTTP API port is optional and is only needed if you want to offer access to your node's API. All ports can be customized inside the ",(0,a.kt)("a",{parentName:"p",href:"/bee/configuration"},"config.toml")," file."),(0,a.kt)("p",null,"The default dashboard only listens on localhost:8081 per default. If you want to make it accessible from the Internet, you will need to change the default configuration (though we recommend using a reverse proxy)."))}m.isMDXComponent=!0},3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=u(n),m=o,g=p["".concat(l,".").concat(m)]||p[m]||c[m]||a;return n?r.createElement(g,i(i({ref:t},d),{},{components:n})):r.createElement(g,i({ref:t},d))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"}}]);