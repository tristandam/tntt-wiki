"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[95486],{25990:function(e){e.exports=JSON.parse('{"pluginId":"blueprints","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"link","label":"Introduction","href":"/blueprints/introduction","docId":"introduction"},{"type":"category","label":"Data Marketplace","items":[{"type":"link","label":"Overview","href":"/blueprints/data-marketplace/overview","docId":"data-marketplace/overview"},{"type":"link","label":"architecture","href":"/blueprints/data-marketplace/architecture","docId":"data-marketplace/architecture"},{"type":"link","label":"deployment-and-testing","href":"/blueprints/data-marketplace/deployment-and-testing","docId":"data-marketplace/deployment-and-testing"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Document Immutability","items":[{"type":"link","label":"Overview","href":"/blueprints/doc-immutability/overview","docId":"doc-immutability/overview"},{"type":"link","label":"architecture","href":"/blueprints/doc-immutability/architecture","docId":"doc-immutability/architecture"},{"type":"link","label":"deployment-and-testing","href":"/blueprints/doc-immutability/deployment-and-testing","docId":"doc-immutability/deployment-and-testing"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Tangle Data Storage","items":[{"type":"link","label":"Overview","href":"/blueprints/tangle-data-storage/overview","docId":"tangle-data-storage/overview"},{"type":"link","label":"architecture","href":"/blueprints/tangle-data-storage/architecture","docId":"tangle-data-storage/architecture"},{"type":"link","label":"deployment-and-testing","href":"/blueprints/tangle-data-storage/deployment-and-testing","docId":"tangle-data-storage/deployment-and-testing"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Track And Trace","items":[{"type":"link","label":"Overview","href":"/blueprints/track-and-trace/overview","docId":"track-and-trace/overview"},{"type":"link","label":"architecture","href":"/blueprints/track-and-trace/architecture","docId":"track-and-trace/architecture"},{"type":"link","label":"deployment-and-testing","href":"/blueprints/track-and-trace/deployment-and-testing","docId":"track-and-trace/deployment-and-testing"},{"type":"link","href":"https://iotaledger.github.io/gtsc-track-trace/tutorial/track-trace-ledger-api-tutorial-101","label":"Track And Trace/REST API 101 Tutorial"}],"collapsed":true,"collapsible":true}]},"docs":{"data-marketplace/architecture":{"id":"data-marketplace/architecture","title":"architecture","description":"The Data Marketplace application uses sensors, a cloud backend, and the IOTA Tangle to publish data to MAM channels.","sidebar":"docs"},"data-marketplace/deployment-and-testing":{"id":"data-marketplace/deployment-and-testing","title":"deployment-and-testing","description":"To start buying and selling data streams on the Data Marketplace, deploy your own application, or test it in our demo app.","sidebar":"docs"},"data-marketplace/overview":{"id":"data-marketplace/overview","title":"overview","description":"Data silos make it difficult to buy and sell data among different data points. To overcome this challenge, the Data Marketplace uses Masked Authenticated Messaging (MAM) channels to open up the data silos and allow users to make micropayments of IOTA tokens to the data owners in exchange for data.","sidebar":"docs"},"doc-immutability/architecture":{"id":"doc-immutability/architecture","title":"architecture","description":"The Document immutability application is simply a graphical user interface (GUI), written in React with some additional functionality provided by the poex-tool","sidebar":"docs"},"doc-immutability/deployment-and-testing":{"id":"doc-immutability/deployment-and-testing","title":"deployment-and-testing","description":"Prerequisites","sidebar":"docs"},"doc-immutability/overview":{"id":"doc-immutability/overview","title":"overview","description":"Documents are an important means of transporting information and contracts. Being able to reliably prove that a document has not been tampered from an established state helps ensure trust between the parties envolved. This blueprint describes a solution that enables users to verify data integrity of a document using the IOTA Tangle, while remaining in complete control of the data.","sidebar":"docs"},"introduction":{"id":"introduction","title":"introduction","description":"These blueprints provide guidelines for you to replicate and deploy IOTA  technology in real-world scenarios.","sidebar":"docs"},"README":{"id":"README","title":"README","description":"The documentation is built using Docusaurus 2. The deployment is done through a centralized build from IOTA WIKI. To run a local instance the IOTA WIKI CLI is used."},"tangle-data-storage/architecture":{"id":"tangle-data-storage/architecture","title":"architecture","description":"The Tangle data storage application consists of two parts: A graphical user interface (GUI) written in React and a back-end API written in NodeJS.","sidebar":"docs"},"tangle-data-storage/deployment-and-testing":{"id":"tangle-data-storage/deployment-and-testing","title":"deployment-and-testing","description":"To start storing data in the IPFS node and the Tangle, deploy the application and use our graphical user interface to upload file data, retrieve file data, and compare hashes to verify the contents.","sidebar":"docs"},"tangle-data-storage/overview":{"id":"tangle-data-storage/overview","title":"overview","description":"Data boosts innovation for public and private sector organisations, and can be used to create new revenue streams. However, without a vendor-neutral way of verifying data, it can\'t be trusted. This blueprint uses the IOTA Tangle as an immutable data structure to verify the contents of a file in a third-party storage solution.","sidebar":"docs"},"track-and-trace/architecture":{"id":"track-and-trace/architecture","title":"architecture","description":"The track-and-trace application uses the IOTA MAM protocol to give returnable assets an ID and to track those assets in streams of transactions called MAM channels.","sidebar":"docs"},"track-and-trace/deployment-and-testing":{"id":"track-and-trace/deployment-and-testing","title":"deployment-and-testing","description":"To start tracking data in the Tangle, deploy the application and use our graphical user interface to trace existing assets and create new ones.","sidebar":"docs"},"track-and-trace/overview":{"id":"track-and-trace/overview","title":"overview","description":"Returnable assets that are used within distribution networks are often not returned to their original owners. This blueprint describes how the IBCS Group implemented a track and trace system for recovery of returnable assets, using the IOTA Tangle and other IOTA technologies.","sidebar":"docs"}}}')}}]);