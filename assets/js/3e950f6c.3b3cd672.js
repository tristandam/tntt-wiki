"use strict";(self.webpackChunkiota_wiki=self.webpackChunkiota_wiki||[]).push([[72569],{61180:function(e,t,i){i.r(t),i.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return p}});var n=i(83117),a=i(80102),r=(i(67294),i(3905)),o=["components"],s={image:"/img/integration-services/use-case-1.png",description:"IOTA Identity provides a digital identity anchored on the Tangle and verifiable credentials (VC) that are attachable to said identity.",keywords:["IOTA Identity basics","validate university degree","validate patient data"]},l=void 0,d={unversionedId:"basics/identity",id:"basics/identity",title:"identity",description:"IOTA Identity provides a digital identity anchored on the Tangle and verifiable credentials (VC) that are attachable to said identity.",source:"@site/external/integration-services/documentation/docs/basics/identity.md",sourceDirName:"basics",slug:"/basics/identity",permalink:"/integration-services/basics/identity",editUrl:"https://github.com/iotaledger/integration-services/edit/develop/external/integration-services/documentation/docs/basics/identity.md",tags:[],version:"current",frontMatter:{image:"/img/integration-services/use-case-1.png",description:"IOTA Identity provides a digital identity anchored on the Tangle and verifiable credentials (VC) that are attachable to said identity.",keywords:["IOTA Identity basics","validate university degree","validate patient data"]},sidebar:"docs",previous:{title:"example_is_sdk",permalink:"/integration-services/basics/authentication/example_is_sdk"},next:{title:"streams",permalink:"/integration-services/basics/streams"}},c={},p=[{value:"Wiki",id:"wiki",level:2},{value:"Blogposts",id:"blogposts",level:2}],u={toc:p};function f(e){var t=e.components,s=(0,a.Z)(e,o);return(0,r.kt)("wrapper",(0,n.Z)({},u,s,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"iota-identity"},"IOTA Identity"),(0,r.kt)("p",null,"IOTA Identity provides a digital identity anchored on the Tangle and verifiable credentials (VC)\nthat are attachable to said identity. For example, a university student could use this to ",(0,r.kt)("a",{parentName:"p",href:"https://wiki.iota.org/identity.rs/tutorials/validate_university_degree"},"validate his degree"),", or it could be applied in combination with ",(0,r.kt)("a",{parentName:"p",href:"/integration-services/basics/streams"},"IOTA Streams")," to validate a patient's prescriptions and medical data as illustrated bellow."),(0,r.kt)("p",null,"[",(0,r.kt)("img",{alt:"Validate patient data",src:i(65254).Z,title:"Validate patient data",width:"2100",height:"1148"})),(0,r.kt)("p",null,"The concepts of decentralized identities will not be explained in depth in this wiki. You can find more information on IOTA Identity in the following resources:"),(0,r.kt)("h2",{id:"wiki"},"Wiki"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://wiki.iota.org/identity.rs/decentralized_identifiers/overview"},"Decentralized Identifier")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://wiki.iota.org/identity.rs/verifiable_credentials/overview"},"Verifiable Credentials"),"  "),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://wiki.iota.org/identity.rs/did_communications/overview"},"DID Communication"))),(0,r.kt)("h2",{id:"blogposts"},"Blogposts"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://blog.iota.org/the-iota-identity-actor-explained/"},"Explaining the IOTA Identity Actor")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://blog.iota.org/releasing-iota-identity-alpha-a-standard-framework-for-digital-identity-cebabd108b4f/"},"Releasing IOTA Identity Alpha: A Standard Framework for Digital Identity")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://blog.iota.org/iota-identity-beta-release/"},"IOTA Identity: Beta Release"))))}f.isMDXComponent=!0},65254:function(e,t,i){t.Z=i.p+"assets/images/use-case-1-0ce9345200d67b98fa30d0e22a956f52.png"},3905:function(e,t,i){i.d(t,{Zo:function(){return c},kt:function(){return f}});var n=i(67294);function a(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){a(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function s(e,t){if(null==e)return{};var i,n,a=function(e,t){if(null==e)return{};var i,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||(a[i]=e[i]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var l=n.createContext({}),d=function(e){var t=n.useContext(l),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},c=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var i=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=d(i),f=a,m=u["".concat(l,".").concat(f)]||u[f]||p[f]||r;return i?n.createElement(m,o(o({ref:t},c),{},{components:i})):n.createElement(m,o({ref:t},c))}));function f(e,t){var i=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=i.length,o=new Array(r);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var d=2;d<r;d++)o[d]=i[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,i)}u.displayName="MDXCreateElement"}}]);